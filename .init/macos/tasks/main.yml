---
- name: group 'docker' with gid '1000' is created
  group:
    name: docker
    gid: 1000
    system: no
  become: true

- name: sudo with nopasswd is enabled for group 'wheel'
  copy:
    src: wheel
    dest: /etc/sudoers.d
    validate: "visudo -cf %s"
  become: true

- name: current user is added to groups 'wheel' and 'docker'
  user:
    name: "{{ ansible_user_id }}"
    groups: "{{ item }}"
    append: yes
  with_items:
    - wheel
    - docker
  become: true

- name: homebrew cask is installed
  homebrew:
    name: cask
    state: latest

- name: additional homebrew repos are installed
  homebrew_tap:
    name: "{{ item }}"
    state: present
  with_items:
    - homebrew/cask-versions
    - homebrew/cask-fonts

- name: homebrew packages are installed
  homebrew:
    state: present
    name: "{{ item }}"
  with_items:
    # Env
    - bash
    - bash-completion
    - coreutils
    - curl
    - exa
    - fd
    - gawk
    - gnu-sed
    - gnu-tar
    - gnupg
    - python
    - python3
    - rsync
    - watch
    - wget
    - zsh
    # Dev
    - git
    - gopass
    - jq
    - jsonlint
    - neovim
    - reattach-to-user-namespace
    - ripgrep
    - tmux
    # DevOps
    - ansible
    - awscli
    - mtr
    - nmap
    - packer
    - terraform

- name: homebrew GNU packages are installed with default names
  homebrew:
    name: "{{ item }}"
    state: present
    install_options: with-default-names
  with_items:
    - gnu-sed
    - gnu-tar
    - grep

- name: homebrew cask packages are installed
  homebrew_cask:
    state: present
    name: "{{ item }}"
  with_items:
    # Env
    - dash
    - firefox
    - font-anonymous-pro
    - gpg-suite
    - hammerspoon
    - slack
    - tunnelblick
    # Dev / DevOps
    - docker-edge
    - iterm2
    - kitematic

- name: homebrew packages are upgraded
  homebrew:
    upgrade_all: yes

- name: homebrew packages are cleaned up
  shell: brew cleanup

- name: homebrew cask packages are upgraded and cleaned up
  shell: brew cask upgrade && brew cask cleanup

- name: current shell is set to '/usr/local/bin/zsh'
  user:
    name: "{{ ansible_user_id }}"
    shell: /usr/local/bin/zsh
  become: yes

- name: macOS defaults are configured
  osx_defaults:
    host: currentHost
    domain: "{{ item.domain }}"
    key: "{{ item.key }}"
    type: "{{ item.type }}"
    value: "{{ item.value }}"
  with_defaults: "{{ macos_defaults }}"

- name: absolute symlinks are created
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
    force: yes
  with_items:
    - { src: '/Applications/Docker.app/Contents/Resources/etc/docker.zsh-completion',
        dest: '~/.config/zsh/completion/_docker' }
    - { src: '/Applications/Docker.app/Contents/Resources/etc/docker-compose.zsh-completion',
        dest: '~/.config/zsh/completion/_docker-compose' }
    - { src: '~/.config/hammerspoon', dest: '~/.hammerspoon' }
 
- name: files and directories in ~ are created
  file:
    path: ~/{{ item.path }}
    state: "{{ item.state | default('directory') }}"
    mode: "{{ item.mode | default('0755') }}"
  with_items:
    - { path: 'Library/LaunchAgents' }

- name: custom configuration files are copied
  copy:
    src: "{{ item.file }}"
    dest: "{{ item.dir }}/{{ item.file }}"
  with_items:
    - { file: ssh-add-A.plist, dir: ~/Library/LaunchAgents }

